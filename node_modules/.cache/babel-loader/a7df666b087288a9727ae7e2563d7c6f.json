{"ast":null,"code":"var _jsxFileName = \"/home/develop/Documents/ReactJS_Redux_ES6/weather-app/src/components/WeatherLocation/index.js\";\nimport React, { Component } from 'react';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport './styles.css';\nimport { SUNNY, FOG, CLOUD, SNOW, RAIN, WIND } from '../../constants/weathers';\nconst location = 'Mexico City, MX';\nconst api_key = 'b47e17be31b6311bf670d92b8f350694';\nconst url_base_weather = 'http://api.openweathermap.org/data/2.5/weather';\nconst api_weather = `${url_base_weather}?q=${location}&appid=${api_key}`;\nconst data = {\n  temperature: 5,\n  weatherState: SUNNY,\n  humidity: 10,\n  wind: '10'\n};\n\nclass WeatherLocation extends Component {\n  constructor() {\n    super();\n\n    this.getWeatherState = weather_data => {\n      return SUN;\n    };\n\n    this.getData = weather_data => {\n      const {\n        humidity,\n        temp\n      } = weather_data.main;\n      const {\n        speed\n      } = weather_data.wind;\n      const weatherState = this.getWeatherState(weather_data);\n      const data = {\n        humidity,\n        temperature: temp,\n        weatherState,\n        wind: `${speed}`\n      };\n      return data;\n    };\n\n    this.handleUpdateClick = () => {\n      fetch(api_weather).then(resolve => {\n        return resolve.json();\n      }).then(data => {\n        const newWeather = this.getData(data);\n        console.log('data', newWeather);\n        this.setState({\n          data: newWeather\n        });\n      });\n    };\n\n    this.state = {\n      city: 'Buenos Aires',\n      data: data\n    };\n  }\n\n  render() {\n    const {\n      city,\n      data\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"weatherLocationCont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Location, {\n      city: city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(WeatherData, {\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleUpdateClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Actualizar\"));\n  }\n\n}\n\nexport default WeatherLocation;","map":{"version":3,"sources":["/home/develop/Documents/ReactJS_Redux_ES6/weather-app/src/components/WeatherLocation/index.js"],"names":["React","Component","Location","WeatherData","SUNNY","FOG","CLOUD","SNOW","RAIN","WIND","location","api_key","url_base_weather","api_weather","data","temperature","weatherState","humidity","wind","WeatherLocation","constructor","getWeatherState","weather_data","SUN","getData","temp","main","speed","handleUpdateClick","fetch","then","resolve","json","newWeather","console","log","setState","state","city","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,cAAP;AAEA,SACIC,KADJ,EAEIC,GAFJ,EAGIC,KAHJ,EAIIC,IAJJ,EAKIC,IALJ,EAMIC,IANJ,QAOO,0BAPP;AASA,MAAMC,QAAQ,GAAG,iBAAjB;AACA,MAAMC,OAAO,GAAG,kCAAhB;AACA,MAAMC,gBAAgB,GAAG,gDAAzB;AAEA,MAAMC,WAAW,GAAI,GAAED,gBAAiB,MAAKF,QAAS,UAASC,OAAQ,EAAvE;AAEA,MAAMG,IAAI,GAAG;AACTC,EAAAA,WAAW,EAAE,CADJ;AAETC,EAAAA,YAAY,EAAEZ,KAFL;AAGTa,EAAAA,QAAQ,EAAE,EAHD;AAITC,EAAAA,IAAI,EAAE;AAJG,CAAb;;AAQA,MAAMC,eAAN,SAA8BlB,SAA9B,CAAwC;AAEpCmB,EAAAA,WAAW,GAAE;AACT;;AADS,SAQbC,eARa,GAQKC,YAAY,IAAI;AAC9B,aAAOC,GAAP;AACH,KAVY;;AAAA,SAYbC,OAZa,GAYHF,YAAY,IAAI;AACtB,YAAM;AAAEL,QAAAA,QAAF;AAAYQ,QAAAA;AAAZ,UAAqBH,YAAY,CAACI,IAAxC;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAYL,YAAY,CAACJ,IAA/B;AACA,YAAMF,YAAY,GAAG,KAAKK,eAAL,CAAqBC,YAArB,CAArB;AACA,YAAMR,IAAI,GAAG;AACTG,QAAAA,QADS;AAETF,QAAAA,WAAW,EAAEU,IAFJ;AAGTT,QAAAA,YAHS;AAITE,QAAAA,IAAI,EAAG,GAAES,KAAM;AAJN,OAAb;AAMA,aAAOb,IAAP;AACH,KAvBY;;AAAA,SAyBbc,iBAzBa,GAyBO,MAAM;AACtBC,MAAAA,KAAK,CAAChB,WAAD,CAAL,CAAmBiB,IAAnB,CAA0BC,OAAO,IAAI;AACjC,eAAOA,OAAO,CAACC,IAAR,EAAP;AACH,OAFD,EAEGF,IAFH,CAEQhB,IAAI,IAAI;AACZ,cAAMmB,UAAU,GAAG,KAAKT,OAAL,CAAaV,IAAb,CAAnB;AACAoB,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBF,UAAnB;AACA,aAAKG,QAAL,CAAc;AACVtB,UAAAA,IAAI,EAAEmB;AADI,SAAd;AAGH,OARD;AASH,KAnCY;;AAET,SAAKI,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,cADG;AAETxB,MAAAA,IAAI,EAAEA;AAFG,KAAb;AAIH;;AA+BDyB,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAED,MAAAA,IAAF;AAAQxB,MAAAA;AAAR,QAAiB,KAAKuB,KAA5B;AAEA,WACA;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAExB,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,KAAKc,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CADA;AASH;;AApDmC;;AAuDxC,eAAeT,eAAf","sourcesContent":["import React, { Component } from 'react'\nimport Location from './Location'\nimport WeatherData from './WeatherData'\nimport './styles.css'\n\nimport {\n    SUNNY,\n    FOG,\n    CLOUD,\n    SNOW, \n    RAIN, \n    WIND,\n} from '../../constants/weathers'\n\nconst location = 'Mexico City, MX'\nconst api_key = 'b47e17be31b6311bf670d92b8f350694'\nconst url_base_weather = 'http://api.openweathermap.org/data/2.5/weather'\n\nconst api_weather = `${url_base_weather}?q=${location}&appid=${api_key}`\n\nconst data = {\n    temperature: 5,\n    weatherState: SUNNY,\n    humidity: 10,\n    wind: '10',\n}\n\n\nclass WeatherLocation extends Component {\n\n    constructor(){\n        super()\n        this.state = {\n            city: 'Buenos Aires',\n            data: data,\n        }\n    }\n\n    getWeatherState = weather_data => {\n        return SUN\n    }\n\n    getData = weather_data => {\n        const { humidity, temp } = weather_data.main\n        const { speed } = weather_data.wind\n        const weatherState = this.getWeatherState(weather_data)\n        const data = {\n            humidity,\n            temperature: temp,\n            weatherState,\n            wind: `${speed}`,\n        }\n        return data\n    }\n\n    handleUpdateClick = () => {\n        fetch(api_weather).then ( resolve => {\n            return resolve.json()\n        }).then(data => {\n            const newWeather = this.getData(data)\n            console.log('data',newWeather)\n            this.setState({\n                data: newWeather\n            })\n        })\n    }\n\n    render() {\n\n        const { city, data } = this.state\n\n        return (\n        <div className=\"weatherLocationCont\">\n            <Location city={city}/>\n            <WeatherData data={data} />\n            <button onClick={this.handleUpdateClick}>\n                Actualizar\n            </button>\n        </div>\n        )\n    }\n}\n\nexport default WeatherLocation"]},"metadata":{},"sourceType":"module"}