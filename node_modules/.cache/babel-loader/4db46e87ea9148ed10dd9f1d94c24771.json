{"ast":null,"code":"import convert from 'convert-units';\nimport { SUN, FOG, CLOUD, SNOW, RAIN, WIND, THUNDER, DRIZZLE } from '../constants/weathers';\n\nconst getTemp = kelvin => {\n  return Number(convert(kelvin).from('K').to('C').toFixed(0));\n};\n\nconst getWeatherState = weather => {\n  const {\n    id\n  } = weather;\n\n  if (id < 300) {\n    return THUNDER;\n  } else if (id < 400) {\n    return DRIZZLE;\n  } else if (id < 600) {\n    return RAIN;\n  } else if (id < 700) {\n    return SNOW;\n  } else if (id === 800) {\n    return SUN;\n  } else {\n    return CLOUD;\n  }\n};\n\nconst transformWeather = weather_data => {\n  const {\n    humidity,\n    temp\n  } = weather_data.main;\n  const {\n    speed\n  } = weather_data.wind;\n  const weatherState = getWeatherState(weather_data.weather[0]);\n  const temperature = getTemp(temp);\n  const data = {\n    humidity,\n    temperature,\n    weatherState,\n    wind: `${speed}`\n  };\n  return data;\n};\n\nexport default transformWeather;","map":{"version":3,"sources":["/home/develop/Documents/ReactJS_Redux_ES6/weather-app/src/services/transformWeather.js"],"names":["convert","SUN","FOG","CLOUD","SNOW","RAIN","WIND","THUNDER","DRIZZLE","getTemp","kelvin","Number","from","to","toFixed","getWeatherState","weather","id","transformWeather","weather_data","humidity","temp","main","speed","wind","weatherState","temperature","data"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,eAApB;AAEA,SACIC,GADJ,EAEIC,GAFJ,EAGIC,KAHJ,EAIIC,IAJJ,EAKIC,IALJ,EAMIC,IANJ,EAOIC,OAPJ,EAQIC,OARJ,QASO,uBATP;;AAWA,MAAMC,OAAO,GAAGC,MAAM,IAAI;AACtB,SAAOC,MAAM,CAACX,OAAO,CAACU,MAAD,CAAP,CAAgBE,IAAhB,CAAqB,GAArB,EAA0BC,EAA1B,CAA6B,GAA7B,EAAkCC,OAAlC,CAA0C,CAA1C,CAAD,CAAb;AACH,CAFD;;AAIA,MAAMC,eAAe,GAAGC,OAAO,IAAI;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAf;;AAEA,MAAIC,EAAE,GAAG,GAAT,EAAa;AACT,WAAOV,OAAP;AACH,GAFD,MAEO,IAAKU,EAAE,GAAG,GAAV,EAAc;AACjB,WAAOT,OAAP;AACH,GAFM,MAED,IAAIS,EAAE,GAAG,GAAT,EAAa;AACf,WAAOZ,IAAP;AACH,GAFK,MAEA,IAAIY,EAAE,GAAG,GAAT,EAAa;AACf,WAAOb,IAAP;AACH,GAFK,MAEA,IAAIa,EAAE,KAAK,GAAX,EAAe;AACjB,WAAOhB,GAAP;AACH,GAFK,MAEA;AACF,WAAOE,KAAP;AACH;AAEJ,CAjBD;;AAmBA,MAAMe,gBAAgB,GAAGC,YAAY,IAAI;AACrC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAqBF,YAAY,CAACG,IAAxC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,YAAY,CAACK,IAA/B;AACA,QAAMC,YAAY,GAAGV,eAAe,CAACI,YAAY,CAACH,OAAb,CAAqB,CAArB,CAAD,CAApC;AACA,QAAMU,WAAW,GAAGjB,OAAO,CAACY,IAAD,CAA3B;AAEA,QAAMM,IAAI,GAAG;AACTP,IAAAA,QADS;AAETM,IAAAA,WAFS;AAGTD,IAAAA,YAHS;AAITD,IAAAA,IAAI,EAAG,GAAED,KAAM;AAJN,GAAb;AAMA,SAAOI,IAAP;AACH,CAbD;;AAeA,eAAeT,gBAAf","sourcesContent":["import convert from 'convert-units'\n\nimport {\n    SUN,\n    FOG,\n    CLOUD,\n    SNOW, \n    RAIN, \n    WIND,\n    THUNDER,\n    DRIZZLE\n} from '../constants/weathers'\n\nconst getTemp = kelvin => {\n    return Number(convert(kelvin).from('K').to('C').toFixed(0))\n}\n\nconst getWeatherState = weather => {\n    const { id } = weather\n\n    if (id < 300){\n        return THUNDER\n    } else if ( id < 400){\n        return DRIZZLE\n    }else if (id < 600){\n        return RAIN\n    }else if (id < 700){\n        return SNOW\n    }else if (id === 800){\n        return SUN\n    }else {\n        return CLOUD\n    }\n    \n}\n\nconst transformWeather = weather_data => {\n    const { humidity, temp } = weather_data.main\n    const { speed } = weather_data.wind\n    const weatherState = getWeatherState(weather_data.weather[0])\n    const temperature = getTemp(temp)\n    \n    const data = {\n        humidity,\n        temperature,\n        weatherState,\n        wind: `${speed}`,\n    }\n    return data\n}\n\nexport default transformWeather"]},"metadata":{},"sourceType":"module"}