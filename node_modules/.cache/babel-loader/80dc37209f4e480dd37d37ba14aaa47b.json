{"ast":null,"code":"import convert from 'convert-units';\nimport { SUNNY, FOG, CLOUD, SNOW, RAIN, WIND } from '../constants/weathers';\n\nconst getTemp = kelvin => {\n  return Number(convert(kelvin).from('K').to('C').toFixed(0));\n};\n\nconst getWeatherState = weather_data => {\n  return SUNNY;\n};\n\nconst transformWeather = weather_data => {\n  const {\n    humidity,\n    temp\n  } = weather_data.main;\n  const {\n    speed\n  } = weather_data.wind;\n  const weatherState = getWeatherState(weather_data);\n  const temperature = getTemp(temp);\n  const data = {\n    humidity,\n    temperature,\n    weatherState,\n    wind: `${speed}`\n  };\n  return data;\n};\n\nexport default transformWeather;","map":{"version":3,"sources":["/home/develop/Documents/ReactJS_Redux_ES6/weather-app/src/services/transformWeather.js"],"names":["convert","SUNNY","FOG","CLOUD","SNOW","RAIN","WIND","getTemp","kelvin","Number","from","to","toFixed","getWeatherState","weather_data","transformWeather","humidity","temp","main","speed","wind","weatherState","temperature","data"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,eAApB;AAEA,SACIC,KADJ,EAEIC,GAFJ,EAGIC,KAHJ,EAIIC,IAJJ,EAKIC,IALJ,EAMIC,IANJ,QAOO,uBAPP;;AASA,MAAMC,OAAO,GAAGC,MAAM,IAAI;AACtB,SAAOC,MAAM,CAACT,OAAO,CAACQ,MAAD,CAAP,CAAgBE,IAAhB,CAAqB,GAArB,EAA0BC,EAA1B,CAA6B,GAA7B,EAAkCC,OAAlC,CAA0C,CAA1C,CAAD,CAAb;AACH,CAFD;;AAIA,MAAMC,eAAe,GAAGC,YAAY,IAAI;AACpC,SAAOb,KAAP;AACH,CAFD;;AAIA,MAAMc,gBAAgB,GAAGD,YAAY,IAAI;AACrC,QAAM;AAAEE,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAqBH,YAAY,CAACI,IAAxC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYL,YAAY,CAACM,IAA/B;AACA,QAAMC,YAAY,GAAGR,eAAe,CAACC,YAAD,CAApC;AACA,QAAMQ,WAAW,GAAGf,OAAO,CAACU,IAAD,CAA3B;AAEA,QAAMM,IAAI,GAAG;AACTP,IAAAA,QADS;AAETM,IAAAA,WAFS;AAGTD,IAAAA,YAHS;AAITD,IAAAA,IAAI,EAAG,GAAED,KAAM;AAJN,GAAb;AAMA,SAAOI,IAAP;AACH,CAbD;;AAeA,eAAeR,gBAAf","sourcesContent":["import convert from 'convert-units'\n\nimport {\n    SUNNY,\n    FOG,\n    CLOUD,\n    SNOW, \n    RAIN, \n    WIND,\n} from '../constants/weathers'\n\nconst getTemp = kelvin => {\n    return Number(convert(kelvin).from('K').to('C').toFixed(0))\n}\n\nconst getWeatherState = weather_data => {\n    return SUNNY\n}\n\nconst transformWeather = weather_data => {\n    const { humidity, temp } = weather_data.main\n    const { speed } = weather_data.wind\n    const weatherState = getWeatherState(weather_data)\n    const temperature = getTemp(temp)\n    \n    const data = {\n        humidity,\n        temperature,\n        weatherState,\n        wind: `${speed}`,\n    }\n    return data\n}\n\nexport default transformWeather"]},"metadata":{},"sourceType":"module"}