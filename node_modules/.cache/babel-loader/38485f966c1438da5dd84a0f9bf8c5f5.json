{"ast":null,"code":"var _jsxFileName = \"/home/develop/Documents/ReactJS_Redux_ES6/weather-app/src/components/WeatherLocation/index.js\";\nimport React, { Component } from 'react';\nimport transformWeather from '../../services/transformWeather';\nimport { api_weather } from '../../constants/api_url';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport './styles.css';\nimport { SUNNY, FOG, CLOUD, SNOW, RAIN, WIND } from '../../constants/weathers';\nconst data = {\n  temperature: 5,\n  weatherState: SUNNY,\n  humidity: 10,\n  wind: '10'\n};\n\nclass WeatherLocation extends Component {\n  constructor() {\n    super();\n\n    this.handleUpdateClick = () => {\n      fetch(api_weather).then(resolve => {\n        return resolve.json();\n      }).then(data => {\n        console.log('data', data);\n        const newWeather = transformWeather(data);\n        console.log('newWeather', newWeather);\n        this.setState({\n          data: newWeather\n        });\n      });\n    };\n\n    this.state = {\n      city: 'Buenos Aires',\n      data: data\n    };\n    console.log('constructor');\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('componentDidUpdate');\n  }\n\n  componentWillMount() {\n    console.log('componentWillMount');\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    console.log('componentWillUpdate');\n  }\n\n  render() {\n    console.log('render');\n    const {\n      city,\n      data\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"weatherLocationCont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Location, {\n      city: city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(WeatherData, {\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleUpdateClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Actualizar\"));\n  }\n\n}\n\nexport default WeatherLocation;","map":{"version":3,"sources":["/home/develop/Documents/ReactJS_Redux_ES6/weather-app/src/components/WeatherLocation/index.js"],"names":["React","Component","transformWeather","api_weather","Location","WeatherData","SUNNY","FOG","CLOUD","SNOW","RAIN","WIND","data","temperature","weatherState","humidity","wind","WeatherLocation","constructor","handleUpdateClick","fetch","then","resolve","json","console","log","newWeather","setState","state","city","componentDidMount","componentDidUpdate","prevProps","prevState","componentWillMount","componentWillUpdate","nextProps","nextState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAGA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,cAAP;AAEA,SACIC,KADJ,EAEIC,GAFJ,EAGIC,KAHJ,EAIIC,IAJJ,EAKIC,IALJ,EAMIC,IANJ,QAOO,0BAPP;AASA,MAAMC,IAAI,GAAG;AACTC,EAAAA,WAAW,EAAE,CADJ;AAETC,EAAAA,YAAY,EAAER,KAFL;AAGTS,EAAAA,QAAQ,EAAE,EAHD;AAITC,EAAAA,IAAI,EAAE;AAJG,CAAb;;AAQA,MAAMC,eAAN,SAA8BhB,SAA9B,CAAwC;AAEpCiB,EAAAA,WAAW,GAAE;AACT;;AADS,SA2BbC,iBA3Ba,GA2BO,MAAM;AACtBC,MAAAA,KAAK,CAACjB,WAAD,CAAL,CAAmBkB,IAAnB,CAA0BC,OAAO,IAAI;AACjC,eAAOA,OAAO,CAACC,IAAR,EAAP;AACH,OAFD,EAEGF,IAFH,CAEQT,IAAI,IAAI;AACZY,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBb,IAAnB;AACA,cAAMc,UAAU,GAAGxB,gBAAgB,CAACU,IAAD,CAAnC;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBC,UAAzB;AACA,aAAKC,QAAL,CAAc;AACVf,UAAAA,IAAI,EAAEc;AADI,SAAd;AAGH,OATD;AAUH,KAtCY;;AAET,SAAKE,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,cADG;AAETjB,MAAAA,IAAI,EAAEA;AAFG,KAAb;AAIAY,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;;AAEDK,EAAAA,iBAAiB,GAAG;AAChBN,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;;AAEDM,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrCT,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH;;AAGDS,EAAAA,kBAAkB,GAAG;AACjBV,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH;;AAEDU,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACtCb,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;;AAgBDa,EAAAA,MAAM,GAAG;AACLd,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEA,UAAM;AAAEI,MAAAA,IAAF;AAAQjB,MAAAA;AAAR,QAAiB,KAAKgB,KAA5B;AAEA,WACA;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAEjB,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,KAAKO,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CADA;AASH;;AAxDmC;;AA2DxC,eAAeF,eAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport transformWeather from '../../services/transformWeather'\nimport { api_weather } from '../../constants/api_url'\n\n\nimport Location from './Location'\nimport WeatherData from './WeatherData'\nimport './styles.css'\n\nimport {\n    SUNNY,\n    FOG,\n    CLOUD,\n    SNOW, \n    RAIN, \n    WIND,\n} from '../../constants/weathers'\n\nconst data = {\n    temperature: 5,\n    weatherState: SUNNY,\n    humidity: 10,\n    wind: '10',\n}\n\n\nclass WeatherLocation extends Component {\n\n    constructor(){\n        super()\n        this.state = {\n            city: 'Buenos Aires',\n            data: data,\n        }\n        console.log('constructor')\n    }\n\n    componentDidMount() {\n        console.log('componentDidMount')\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log('componentDidUpdate')\n    }\n    \n    \n    componentWillMount() {\n        console.log('componentWillMount')\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n        console.log('componentWillUpdate')\n    }\n\n\n    handleUpdateClick = () => {\n        fetch(api_weather).then ( resolve => {\n            return resolve.json()\n        }).then(data => {\n            console.log('data',data)\n            const newWeather = transformWeather(data)\n            console.log('newWeather',newWeather)\n            this.setState({\n                data: newWeather\n            })\n        })\n    }\n\n    render() {\n        console.log('render')\n\n        const { city, data } = this.state\n\n        return (\n        <div className=\"weatherLocationCont\">\n            <Location city={city}/>\n            <WeatherData data={data} />\n            <button onClick={this.handleUpdateClick}>\n                Actualizar\n            </button>\n        </div>\n        )\n    }\n}\n\nexport default WeatherLocation"]},"metadata":{},"sourceType":"module"}