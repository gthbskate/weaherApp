{"ast":null,"code":"import transformForecast from '../services/transformForecast';\n/*<--------------Importamos el transform*/\n\nexport const SET_CITY = 'SET_CITY';\nexport const SET_FORECAST_DATA = 'SET_FORECAST_DATA';\n/*<----------------------Creamos una nueva constante*/\n\nconst setCity = payload => ({\n  type: SET_CITY,\n  payload\n});\n\nconst setForecastData = payload => ({\n  type: SET_FORECAST_DATA,\n  payload\n});\n/*<---Indicamos la constante que trae nuestro payload de la información del forecast*/\n\n\nexport const api_key = 'b47e17be31b6311bf670d92b8f350694';\n/*<-------------------Traemos la estructura de la url*/\n\nexport const url = 'http://api.openweathermap.org/data/2.5/forecast';\n/*<--------Traemos la estructura de la url*/\n\nexport const setSelectedCity = payload => {\n  /*<--------------------------------Traemos nuestro fetch de ForecastExtended.js*/\n  return dispatch => {\n    const url_forecast = `${url}?q=${payload}&appid=${api_key}`; //Activar en el estado un indicador de búsqueda de datos\n\n    dispatch(setCity(payload));\n    return fetch(url_forecast).then(data => data.json()).then(weather_data => {\n      const forecastData = transformForecast(weather_data);\n      console.log('forecastData', forecastData); //Modificar el estado con el resultado de la promise\n\n      dispatch(setForecastData({\n        city: payload,\n        forecastData\n      }));\n    });\n  };\n};","map":{"version":3,"sources":["/home/develop/Documents/ReactJS_Redux_ES6/weather-app/src/actions/index.js"],"names":["transformForecast","SET_CITY","SET_FORECAST_DATA","setCity","payload","type","setForecastData","api_key","url","setSelectedCity","dispatch","url_forecast","fetch","then","data","json","weather_data","forecastData","console","log","city"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,+BAA9B;AAA8D;;AAE7D,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAA+C;;AAEtD,MAAMC,OAAO,GAAGC,OAAO,KAAK;AAAEC,EAAAA,IAAI,EAAEJ,QAAR;AAAkBG,EAAAA;AAAlB,CAAL,CAAvB;;AAEA,MAAME,eAAe,GAAGF,OAAO,KAAK;AAAEC,EAAAA,IAAI,EAAEH,iBAAR;AAA2BE,EAAAA;AAA3B,CAAL,CAA/B;AAA0E;;;AAG1E,OAAO,MAAMG,OAAO,GAAG,kCAAhB;AAAmD;;AAC1D,OAAO,MAAMC,GAAG,GAAG,iDAAZ;AAA8D;;AAGrE,OAAO,MAAMC,eAAe,GAAGL,OAAO,IAAI;AAAE;AAExC,SAAOM,QAAQ,IAAI;AACtB,UAAMC,YAAY,GAAI,GAAEH,GAAI,MAAKJ,OAAQ,UAASG,OAAQ,EAA1D,CADsB,CAGtB;;AACAG,IAAAA,QAAQ,CAACP,OAAO,CAACC,OAAD,CAAR,CAAR;AAEA,WAAOQ,KAAK,CAACD,YAAD,CAAL,CAAoBE,IAApB,CACHC,IAAI,IAAKA,IAAI,CAACC,IAAL,EADN,EAELF,IAFK,CAGHG,YAAY,IAAI;AACZ,YAAMC,YAAY,GAAGjB,iBAAiB,CAACgB,YAAD,CAAtC;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BF,YAA3B,EAFY,CAIZ;;AACAP,MAAAA,QAAQ,CAACJ,eAAe,CAAC;AAACc,QAAAA,IAAI,EAAEhB,OAAP;AAAgBa,QAAAA;AAAhB,OAAD,CAAhB,CAAR;AACH,KATE,CAAP;AAWI,GAjBD;AAkBH,CApBM","sourcesContent":["import transformForecast from '../services/transformForecast' /*<--------------Importamos el transform*/\n\n\texport const SET_CITY = 'SET_CITY';\n\texport const SET_FORECAST_DATA = 'SET_FORECAST_DATA'; /*<----------------------Creamos una nueva constante*/\n\n\tconst setCity = payload => ({ type: SET_CITY, payload });\n\n\tconst setForecastData = payload => ({ type: SET_FORECAST_DATA, payload }) /*<---Indicamos la constante que trae nuestro payload de la información del forecast*/\n\n\n\texport const api_key = 'b47e17be31b6311bf670d92b8f350694' /*<-------------------Traemos la estructura de la url*/\n\texport const url = 'http://api.openweathermap.org/data/2.5/forecast' /*<--------Traemos la estructura de la url*/\n\n\n\texport const setSelectedCity = payload => { /*<--------------------------------Traemos nuestro fetch de ForecastExtended.js*/\n\n\t    return dispatch => {\n\t\tconst url_forecast = `${url}?q=${payload}&appid=${api_key}`\n\n\t\t//Activar en el estado un indicador de búsqueda de datos\n\t\tdispatch(setCity(payload));\n\n\t\treturn fetch(url_forecast).then(\n\t\t    data => (data.json())\n\t\t).then(\n\t\t    weather_data => {\n\t\t        const forecastData = transformForecast(weather_data);\n\t\t        console.log('forecastData',forecastData);\n\n\t\t        //Modificar el estado con el resultado de la promise\n\t\t        dispatch(setForecastData({city: payload, forecastData}));\n\t\t    }\n\t\t);\n\t    };\n\t};"]},"metadata":{},"sourceType":"module"}