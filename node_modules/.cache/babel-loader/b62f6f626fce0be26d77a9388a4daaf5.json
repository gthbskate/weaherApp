{"ast":null,"code":"var _jsxFileName = \"/home/develop/Documents/ReactJS_Redux_ES6/weather-app/src/containers/ForecastExtendedContainer.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'; //import { getForecastDataFromCities } from '../reducers/cities';\n\nimport ForecastExtended from '../components/ForecastExtended';\n\nclass ForecastExtendedContainer extends Component {\n  render() {\n    const {\n      city,\n      forecastData\n    } = this.props;\n    console.log('forecastData---', forecastData);\n    return city && React.createElement(ForecastExtended, {\n      city: city,\n      forecastData: forecastData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  }\n\n}\n\nForecastExtendedContainer.propTypes = {\n  city: PropTypes.string.isRequired,\n  forecastData: PropTypes.array\n};\n\nconst mapStateToProps = ({\n  city,\n  cities\n}) => ({\n  city,\n  forecastData: cities[city] && cities[city].forecastData\n}); //const mapStateToProps = state => ({ city: state.city, forecastData: getForecastDataFromCities(state.cities, state.city) });\n\n\nexport default connect(mapStateToProps, null)(ForecastExtendedContainer);","map":{"version":3,"sources":["/home/develop/Documents/ReactJS_Redux_ES6/weather-app/src/containers/ForecastExtendedContainer.js"],"names":["React","Component","PropTypes","connect","ForecastExtended","ForecastExtendedContainer","render","city","forecastData","props","console","log","propTypes","string","isRequired","array","mapStateToProps","cities"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAGA;;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;;AAGA,MAAMC,yBAAN,SAAwCJ,SAAxC,CAAkD;AAC9CK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAyB,KAAKC,KAApC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BH,YAA9B;AACA,WACID,IAAI,IACJ,oBAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,IAAxB;AAA8B,MAAA,YAAY,EAAEC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAIH;;AAR6C;;AAYlDH,yBAAyB,CAACO,SAA1B,GAAsC;AAClCL,EAAAA,IAAI,EAAGL,SAAS,CAACW,MAAV,CAAiBC,UADU;AAElCN,EAAAA,YAAY,EAAEN,SAAS,CAACa;AAFU,CAAtC;;AAKA,MAAMC,eAAe,GAAG,CAAC;AAAET,EAAAA,IAAF;AAAQU,EAAAA;AAAR,CAAD,MAAuB;AAAEV,EAAAA,IAAF;AAAQC,EAAAA,YAAY,EAAES,MAAM,CAACV,IAAD,CAAN,IAAgBU,MAAM,CAACV,IAAD,CAAN,CAAaC;AAAnD,CAAvB,CAAxB,C,CAEA;;;AAEA,eAAeL,OAAO,CAACa,eAAD,EAAiB,IAAjB,CAAP,CAA8BX,yBAA9B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n\n//import { getForecastDataFromCities } from '../reducers/cities';\nimport ForecastExtended from '../components/ForecastExtended'\n\n\nclass ForecastExtendedContainer extends Component {\n    render() {\n        const { city, forecastData } = this.props;\n        console.log('forecastData---',forecastData)\n        return (\n            city &&\n            <ForecastExtended city={city} forecastData={forecastData} />\n        );\n    }\n}\n\n\nForecastExtendedContainer.propTypes = {\n    city : PropTypes.string.isRequired,\n    forecastData: PropTypes.array,\n};\n\nconst mapStateToProps = ({ city, cities }) => ({ city, forecastData: cities[city] && cities[city].forecastData });\n\n//const mapStateToProps = state => ({ city: state.city, forecastData: getForecastDataFromCities(state.cities, state.city) });\n\nexport default connect(mapStateToProps,null)(ForecastExtendedContainer);\n"]},"metadata":{},"sourceType":"module"}