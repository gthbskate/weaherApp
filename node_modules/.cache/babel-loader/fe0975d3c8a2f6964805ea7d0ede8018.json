{"ast":null,"code":"import transformForecast from '../services/transformForecast';\nexport const SET_CITY = 'SET_CITY';\nexport const SET_FORECAST_DATA = 'SET_FORECAST_DATA';\n\nconst setCity = payload => ({\n  type: SET_CITY,\n  payload\n});\n\nconst setForecastData = payload => ({\n  type: SET_FORECAST_DATA,\n  payload\n});\n\nexport const api_key = 'b47e17be31b6311bf670d92b8f350694';\nexport const url = 'http://api.openweathermap.org/data/2.5/forecast';\nexport const setSelectedCity = payload => {\n  return dispatch => {\n    const url_forecast = `${url}?q=${payload}&appid=${api_key}`; //Activar en el estado un indicador de búsqueda de datos\n\n    dispatch(setCity(payload));\n    return fetch(url_forecast).then(data => data.json()).then(weather_data => {\n      const forecastData = transformForecast(weather_data);\n      console.log('forecastData', forecastData); //Modificar el estado con el resultado de la promise\n\n      dispatch(setForecastData({\n        city: payload,\n        forecastData\n      }));\n    });\n  };\n};","map":{"version":3,"sources":["/home/develop/Documents/ReactJS_Redux_ES6/weather-app/src/actions/index.js"],"names":["transformForecast","SET_CITY","SET_FORECAST_DATA","setCity","payload","type","setForecastData","api_key","url","setSelectedCity","dispatch","url_forecast","fetch","then","data","json","weather_data","forecastData","console","log","city"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,+BAA9B;AAEA,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;;AAEP,MAAMC,OAAO,GAAGC,OAAO,KAAK;AAAEC,EAAAA,IAAI,EAAEJ,QAAR;AAAkBG,EAAAA;AAAlB,CAAL,CAAvB;;AAEA,MAAME,eAAe,GAAGF,OAAO,KAAK;AAAEC,EAAAA,IAAI,EAAEH,iBAAR;AAA2BE,EAAAA;AAA3B,CAAL,CAA/B;;AAGA,OAAO,MAAMG,OAAO,GAAG,kCAAhB;AACP,OAAO,MAAMC,GAAG,GAAG,iDAAZ;AAGP,OAAO,MAAMC,eAAe,GAAGL,OAAO,IAAI;AAEtC,SAAOM,QAAQ,IAAI;AACf,UAAMC,YAAY,GAAI,GAAEH,GAAI,MAAKJ,OAAQ,UAASG,OAAQ,EAA1D,CADe,CAGf;;AACAG,IAAAA,QAAQ,CAACP,OAAO,CAACC,OAAD,CAAR,CAAR;AAEA,WAAOQ,KAAK,CAACD,YAAD,CAAL,CAAoBE,IAApB,CACHC,IAAI,IAAKA,IAAI,CAACC,IAAL,EADN,EAELF,IAFK,CAGHG,YAAY,IAAI;AACZ,YAAMC,YAAY,GAAGjB,iBAAiB,CAACgB,YAAD,CAAtC;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BF,YAA3B,EAFY,CAIZ;;AACAP,MAAAA,QAAQ,CAACJ,eAAe,CAAC;AAACc,QAAAA,IAAI,EAAEhB,OAAP;AAAgBa,QAAAA;AAAhB,OAAD,CAAhB,CAAR;AACH,KATE,CAAP;AAWH,GAjBD;AAkBH,CApBM","sourcesContent":["import transformForecast from '../services/transformForecast'\n\nexport const SET_CITY = 'SET_CITY';\nexport const SET_FORECAST_DATA = 'SET_FORECAST_DATA';\n\nconst setCity = payload => ({ type: SET_CITY, payload });\n\nconst setForecastData = payload => ({ type: SET_FORECAST_DATA, payload })\n\n\nexport const api_key = 'b47e17be31b6311bf670d92b8f350694'\nexport const url = 'http://api.openweathermap.org/data/2.5/forecast'\n\n\nexport const setSelectedCity = payload => {\n\n    return dispatch => {\n        const url_forecast = `${url}?q=${payload}&appid=${api_key}`\n\n        //Activar en el estado un indicador de búsqueda de datos\n        dispatch(setCity(payload));\n\n        return fetch(url_forecast).then(\n            data => (data.json())\n        ).then(\n            weather_data => {\n                const forecastData = transformForecast(weather_data);\n                console.log('forecastData',forecastData);\n\n                //Modificar el estado con el resultado de la promise\n                dispatch(setForecastData({city: payload, forecastData}));\n            }\n        );\n    };\n};"]},"metadata":{},"sourceType":"module"}